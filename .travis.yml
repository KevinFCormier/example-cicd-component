#
# Sample .travis.yml using the mvp-helloworld image (a helmoperator)
#
dist: trusty
sudo: required
group: bluezone
os:
  - linux

services:
  - docker

env:
  global:
    - OS=linux
    - COMPONENT_TYPE="helmoperator"
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/deploy-to-cluster.sh
    - CLUSTERPOOL_GIT_REPO=github.ibm.com/IBMPrivateCloud/clusterpool.git
    - CLUSTERPOOL_TARGET_PLATFORM=openshift4-aws-mvp-travis

stages:
  - build
  - test
  - publish

jobs:
  include:
    - stage: build
      name: "Build the image and run unit tests"
      script:
        - echo "no-op build"
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make
        - make component/build
        - make component/push
    - stage: test
      name: "Deploy the image to a cluster and run e2e tests"
      if: type = pull_request
      script:
        - echo "no-op deploy-and-test"
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make
        - make component/pull
        - make component/test/unit
        # Checkout cluster and deploy
        - git clone https://github.ibm.com/IBMPrivateCloud/clusterpool.git
        - cd clusterpool
        - make
        - make clusterpool:init
        - make clusterpool:checkout
        - wget https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
        - tar -xf oc.tar.gz
        - mv oc ${TRAVIS_BUILD_DIR}/build-harness/vendor
        - make clusterpool:get-config | config.txt
        - ${TRAVIS_BUILD_DIR}/build-harness/vendor login $(cat config.txt | grep ocp_api_url | awk '{ print $3 }') -p $(cat config.txt | grep ocp_admin_username | awk '{ print $3 }') -p $(cat config.txt | grep ocp_admin_password | awk '{ print $3 }')
        - cd ..
        - make component/deploy
        - make component/test/e2e
        - cd clusterpool
        - make clusterpool:return
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch IN ( master )
      script:
        - echo "no-op publish"
        - make
        # TODO: Make component manifest update not a no-op
        - make component/manifest/update
