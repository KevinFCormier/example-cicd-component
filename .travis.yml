#
# Sample .travis.yml using the mvp-helloworld image (a helmoperator)
#
os:
  - linux

language: python
python: "3.7"

services:
  - docker

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"
    - CLUSTERPOOL_GIT_REPO=github.ibm.com/IBMPrivateCloud/clusterpool.git
    - CLUSTERPOOL_PROJECT_REPO=https://${GITHUB_USER}:${GITHUB_TOKEN}@github.ibm.com/IBMPrivateCloud/clusterpool.git
    - CLUSTERPOOL_TARGET_PLATFORM=openshift4-aws-mvp-travis

    # Component Specific
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/deploy-to-cluster.sh
    - COMPONENT_TYPE="helmoperator"

stages:
  - build
  - unit-test
  - test-e2e
  - publish

jobs:
  include:
    - stage: build
      name: "Build the image and run unit tests"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make
          make component/build
          make component/push
    - stage: unit-test
      name: "Deploy the image to a cluster and run e2e tests"
      if: type = pull_request
      script:
        # Set the image tag differently for PRs
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        # Bootstrap the build harness, pull test image, and run unit tests.  
        - | 
          make 
          make component/pull 
          make component/test/unit
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      if: type = pull_request
      script:
        #Check out a clusterpool, set up oc, deploy, run e2e tests, and return clusterpool cluster
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make 
          make component/pull 
          git clone ${CLUSTERPOOL_PROJECT_REPO} 
          cd clusterpool 
          make init 
          make clusterpool:init 
          make clusterpool:checkout 
          make clusterpool:get-config > ${TRAVIS_BUILD_DIR}/config.txt 
          cd .. 
          make oc/install 
          ${TRAVIS_BUILD_DIR}/build-harness/vendor/oc login $(cat ${TRAVIS_BUILD_DIR}/config.txt | grep ocp_api_url | awk '{ print $3 }') --insecure-skip-tls-verify=true -u $(cat ${TRAVIS_BUILD_DIR}/config.txt | grep ocp_admin_username | awk '{ print $3 }') -p $(cat ${TRAVIS_BUILD_DIR}/config.txt | grep ocp_admin_password | awk '{ print $3 }') 
          make component/deploy 
          make component/test/e2e 
          cd clusterpool 
          make clusterpool:return
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch IN ( master )
      script:
        - |
          make 
          make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG}
